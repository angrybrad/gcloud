# Copyright 2015 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
daemon off;
env DOCUMENT_ROOT;
env FRONT_CONTROLLER_FILE;
user  www-data;
worker_processes  auto;
error_log /dev/stderr info;

events {
    worker_connections  4096;
}

http {
    include       mime.types;
    include       gzip_params;
    server_tokens off;
    default_type  application/octet-stream;
    client_max_body_size 32m;
    access_log  /dev/stdout;
    sendfile        on;
    keepalive_timeout  650;
    keepalive_requests 10000;

    map $http_x_forwarded_proto $fastcgi_https {
        default '';
        https on;
    }

    include /etc/nginx/conf.d/nginx-http.conf;

    upstream php-fpm {
        server 127.0.0.1:9000 max_fails=3 fail_timeout=3s;
    }

    server {
        set_by_lua $docroot 'return os.getenv("DOCUMENT_ROOT")';
        set_by_lua $front_controller_file 'return os.getenv("FRONT_CONTROLLER_FILE")';

        listen       8080;
        root $docroot;
        index index.php index.html index.htm;

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          etag off;

          # Route any 404s back through Craft
          try_files $uri /$front_controller_file$is_args$args;

          # max-age=2592000 = 1 month in seconds, stale-while-revalidate=86400 = 1 day in seconds
          add_header Cache-Control "public, max-age=2592000, must-revalidate, stale-while-revalidate=86400";
        }

        # CSS and Javascript
        location ~* \.(?:css|js)$ {
            etag off;
            expires 1y;
            access_log off;

            # Route any 404s back through Craft
            try_files $uri $uri /$front_controller_file$is_args$args;

            # max-age=31556952 = 1 year in seconds
            add_header Cache-Control "public, max-age=31556952, immutable";
        }

        # WebFonts
        location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
            etag off;
            add_header "Access-Control-Allow-Origin" "*";
            expires 1M;
            access_log off;

            # Route any 404s back through Craft
            try_files $uri /index.php?$query_string;

            # max-age=2592000 = 1 month in seconds, stale-while-revalidate=86400 = 1 day in seconds
            add_header Cache-Control "public, max-age=2592000, must-revalidate, stale-while-revalidate=86400";
         }

        # pass the PHP scripts to FastCGI server
        location ~ \.php$ {
          try_files $uri =404;
          fastcgi_split_path_info ^(.+?\.php)(/.*)$;
          fastcgi_pass php-fpm;
          fastcgi_buffer_size 16k;
          fastcgi_buffers 256 16k;
          fastcgi_busy_buffers_size 4064k;
          fastcgi_max_temp_file_size 0;
          fastcgi_index index.php;
          include fastcgi_params;
          fastcgi_read_timeout 600s;
        }

        # This default behavior is intentionally using regex to allow
        # users to override this with the exact match directive as follows:
        # location = /_ah/health {
        #   # Define your own behavior.
        # }
        #
        location ~ ^/_ah/health$ {
           access_log off;
           return 200 'ok';
        }

        # serve any cpresource requests through the /tmp folder
        location ~ (.*)/cpresources/(([a-z0-9\-\.\_\~\%\!\$\&\'\(\)\*\+\,\;\=\:\@\/]*))(.*) {
          root /tmp;
          try_files /cpresources/$3 /$front_controller_file$is_args$args;
        }

        # pass all other requests directly to Craft if they don't exist
        location / {
          root /app/web;
          try_files $uri /$front_controller_file$is_args$args;
        }

        # Allow users to specify their own configuration
        include /etc/nginx/conf.d/nginx-app.conf;

        # Drop accesses for some files
        location = /favicon.ico { access_log off; log_not_found off; }
        location ~ /\.          { access_log off; log_not_found off; deny all; }
        location ~ ~$           { access_log off; log_not_found off; deny all; }
    }
}

